Source: python-dom-toml
Section: python
Priority: optional
Maintainer: Debian Python Team <team+python@tracker.debian.org>
Uploaders: Josenilson Ferreira da Silva <nilsonfsilva@hotmail.com>
Rules-Requires-Root: no
Build-Depends: debhelper-compat (= 13),
               dh-sequence-python3,
               flit,
               pybuild-plugin-pyproject,
               python3-all,
               python3-coincidence,
               python3-coverage,
               python3-domdf-python-tools,
               python3-importlib-metadata,
               python3-numpy,
               python3-pytest,
               python3-pytest-cov,
               python3-pytest-datadir,
               python3-pytest-regressions,
               python3-pytest-timeout,
               python3-setuptools,
               python3-toml,
               python3-tomli
Standards-Version: 4.6.2
Homepage: https://github.com/domdfcoding/dom_toml
Vcs-Browser: https://salsa.debian.org/python-team/packages/python-dom-toml
Vcs-Git: https://salsa.debian.org/python-team/packages/python-dom-toml.git
Testsuite: autopkgtest-pkg-pybuild

Package: python3-dom-toml
Architecture: all
Depends: ${misc:Depends},
         ${python3:Depends}
Description: Dom's tools for Tom's obvious, minimal language
 dom_toml is a high-level parser and interface for working with TOML files
 in Python. It aims to provide a simple and intuitive way to read, write and
 manipulate TOML files.
 .
 Parsing TOML files: dom_toml can parse TOML files, converting them into a
 Python data structure such as dictionaries, lists, and other data types.
 .
 Accessing and manipulating TOML data: With dom_toml, it is possible to access
 the different elements of a TOML file, such as keys, values ​​and tables. You
 can read, modify and add data to the TOML file using the API provided by
 dom_toml.
 .
 Writing TOML files: In addition to parsing TOML files, dom_toml also lets you
 write data to a TOML file from a Python data structure. This is useful when you
 want to save or update settings in a TOML file.
 .
 Advanced manipulation: dom_toml can offer additional features such as syntax
 validation, error handling and other functionality to facilitate manipulation
 of TOML files.
